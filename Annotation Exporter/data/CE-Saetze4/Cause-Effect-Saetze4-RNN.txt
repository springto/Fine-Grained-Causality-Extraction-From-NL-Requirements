(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD zero-touch) (WORD deployment))))(SEPARATEDCAUSE_EFFECT_RELATION (PUNCT ,) (CAUSE_EFFECT_RELATION (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD DC) (VARIABLE (WORD feed) (WORD voltage)))) (CONDITION (WORD will) (CONDITION (WORD be) (CONDITION (WORD present) (CONDITION (WORD onto) (CONDITION (WORD the) (WORD loop))))))) (CAUSE (KEY_C when) (VARIABLE (WORD operating) (VARIABLE (WORD the) (VARIABLE (WORD legacy) (WORD service))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD POTS) (VARIABLE (WORD service) (VARIABLE (WORD from) (VARIABLE (WORD the) (WORD exchange)))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD DC) (VARIABLE (WORD feed) (WORD voltage)))) (CONDITION (WORD will) (CONDITION (WORD be) (CONDITION (WORD present) (CONDITION (WORD in) (CONDITION (WORD the) (CONDITION (WORD POTS) (CONDITION (WORD Adapter) (CONDITION (WORD bypass) (WORD mode))))))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (AND (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD zero-touch) (WORD deployment))))(AND (PUNCT ,) (CAUSE (KEY_C when) (STATEMENT (VARIABLE (WORD reverse) (VARIABLE (WORD power) (WORD feed))) (CONDITION (WORD is) (CONDITION (WORD not) (CONDITION (WORD applied) (CONDITION (WORD to) (CONDITION (WORD the) (WORD DPU))))))))))(SEPARATEDAND (PUNCT ,) (AND (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD ringing) (WORD signal))) (CONDITION (WORD may) (CONDITION (WORD be) (CONDITION (WORD present) (CONDITION (WORD up) (CONDITION (WORD to) (CONDITION (WORD 2s) (WORD consecutively)))))))) (AND (WORD and) (CONDITION (WORD have) (CONDITION (WORD a) (CONDITION (WORD pause) (CONDITION (WORD of) (CONDITION (WORD no) (CONDITION (WORD more) (CONDITION (WORD than) (CONDITION (WORD 2s) (CONDITION (WORD before) (CONDITION (WORD starting) (CONDITION (WORD a) (CONDITION (WORD new) (WORD cycle)))))))))))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (AND (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD zero-touch) (WORD deployment))))(AND (PUNCT ,) (CAUSE (KEY_C when) (STATEMENT (VARIABLE (WORD reverse) (VARIABLE (WORD power) (WORD feed))) (CONDITION (WORD is) (CONDITION (WORD not) (CONDITION (WORD applied) (CONDITION (WORD to) (CONDITION (WORD the) (WORD loop))))))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD DPU) (VARIABLE (WORD power) (WORD splitter)))) (CONDITION (WORD shall) (CONDITION (WORD limit) (CONDITION (WORD the) (CONDITION (WORD voltage) (CONDITION (WORD drop) (CONDITION (WORD from) (CONDITION (WORD the) (CONDITION (WORD U-O2O) (CONDITION (WORD interface) (CONDITION (WORD to) (CONDITION (WORD the) (CONDITION (WORD U-O) (WORD interface))))))))))))))))(PUNCT .))
(ROOT_SENTENCE (OR (CAUSE_EFFECT_RELATION (STATEMENT (VARIABLE (WORD The) (VARIABLE (WORD DPU) (VARIABLE (WORD POTS) (WORD Adapter-E)))) (CONDITION (WORD also) (CONDITION (WORD needs) (CONDITION (WORD to) (CONDITION (WORD meet) (CONDITION (WORD the) (CONDITION (WORD POTS) (CONDITION (WORD insertion) (CONDITION (WORD loss) (WORD requirements)))))))))) (CAUSE (KEY_C (WORD in) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD zero-touch) (WORD deployment)))))(OR (PUNCT ,) (OR (WORD or) (NONE_CAUSAL (WORD to) (NONE_CAUSAL (WORD support) (NONE_CAUSAL (WORD the) (NONE_CAUSAL (WORD POTS) (NONE_CAUSAL (WORD Adapter) (NONE_CAUSAL (WORD bypass) (WORD mode))))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD the) (VARIABLE (WORD heavy) (VARIABLE (WORD ringing) (WORD load)))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD the) (WORD application)) (CONDITION (WORD will) (CONDITION (WORD be) (CONDITION (WORD limited) (CONDITION (WORD to) (CONDITION (WORD a) (CONDITION (WORD single) (CONDITION (WORD telephone) (CONDITION (WORD in) (CONDITION (WORD the) (WORD house)))))))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD where)))) (STATEMENT (VARIABLE (WORD multiple) (WORD bands)) (CONDITION (WORD are) (CONDITION (WORD mapped) (CONDITION (WORD on) (CONDITION (WORD common) (CONDITION (WORD single-band) (WORD connector))))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD test) (WORD configuration))) (AND (CONDITION (WORD in) (CONDITION (WORD table) (WORD 4.8.3-1))) (CONDITION (WORD shall) (CONDITION (WORD be) (WORD used)))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD integral) (VARIABLE (WORD antenna) (WORD equipment))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD this) (WORD port)) (CONDITION (WORD is) (CONDITION (WORD inseparable) (CONDITION (WORD from) (CONDITION (WORD the) (CONDITION (WORD antenna) (WORD port)))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD where)))) (STATEMENT (VARIABLE (WORD a) (WORD Sap)) (OR (CONDITION (WORD is) (CONDITION (WORD exposed) (CONDITION (WORD by) (CONDITION (WORD a) (CONDITION (WORD VNF) (CONDITION (WORD external) (CONDITION (WORD connection) (WORD point))))))))(OR (PUNCT ,) (OR (CONDITION (WORD a) (CONDITION (WORD PNF) (CONDITION (WORD external) (CONDITION (WORD connection) (WORD point))))) (OR (WORD or) (CONDITION (WORD a) (CONDITION (WORD Sap) (CONDITION (WORD of) (CONDITION (WORD the) (CONDITION (WORD nested) (WORD NS))))))))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD Sap) (VARIABLE (WORD node) (WORD type)))) (NEGATION (WORD does) (NEGATION (WORD not) (CONDITION apply))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (STATEMENT (VARIABLE (WORD The) (WORD UE)) (CONDITION (WORD is) (CONDITION (WORD configured) (CONDITION (WORD with) (CONDITION (WORD a) (CONDITION (WORD guard) (CONDITION (WORD period) (CONDITION (WORD of) (CONDITION (WORD Y) (WORD symbols))))))))))(SEPARATEDCAUSE (PUNCT ,) (CAUSE (KEY_C (WORD in) (KEY_C (WORD the) (WORD case))) (STATEMENT (VARIABLE (WORD the) (VARIABLE (WORD SRS) (VARIABLE (WORD resources) (VARIABLE (WORD of) (VARIABLE (WORD a) (WORD set)))))) (CONDITION (WORD are) (CONDITION (WORD transmitted) (CONDITION (WORD in) (CONDITION (WORD the) (CONDITION (WORD same) (WORD slot))))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD where)))) (STATEMENT (VARIABLE (WORD multiple) (WORD bands)) (CONDITION (WORD are) (CONDITION (WORD mapped) (CONDITION (WORD on) (CONDITION (WORD an) (CONDITION (WORD antenna) (WORD connector))))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (OR (VARIABLE (WORD the) (WORD exclusions)) (OR (WORD or) (VARIABLE (WORD provisions) (VARIABLE (WORD for) (VARIABLE (WORD multi-band) (VARIABLE (WORD capable) (WORD BS))))))) (CONDITION (WORD are) (CONDITION (WORD applicable) (CONDITION (WORD to) (CONDITION (WORD this) (CONDITION (WORD antenna) (WORD connector)))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (STATEMENT (VARIABLE (WORD The) (VARIABLE (WORD DeletePO) (WORD request))) (CONDITION (WORD shall) (CONDITION (WORD only) (CONDITION (WORD be) (WORD supported))))) (CAUSE (KEY_C (WORD in) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (STATEMENT (VARIABLE (WORD a) (VARIABLE (WORD preservation) (WORD scheme))) (CONDITION (WORD with) (WORD storage)))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD broadcast) (WORD message))))(SEPARATEDNEGATION (PUNCT ,) (NEGATION (WORD no) (STATEMENT (VARIABLE slave) (CONDITION (WORD shall) (CONDITION (WORD return) (CONDITION (WORD a) (WORD packet))))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (STATEMENT (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD of)))) (VARIABLE (WORD a) (VARIABLE (WORD transmitter) (WORD test)))) (EFFECT (KEY_C (WORD this) (KEY_C (WORD means) (WORD that))) (NEGATION (WORD no) (STATEMENT (VARIABLE (WORD more) (WORD packets)) (CONDITION (WORD shall) (CONDITION (WORD be) (WORD transmitted)))))))(PUNCT .))
(ROOT_SENTENCE (CAUSE_EFFECT_RELATION (CAUSE (KEY_C (WORD In) (KEY_C (WORD the) (KEY_C (WORD case) (WORD where)))) (STATEMENT (VARIABLE (WORD multiple) (VARIABLE (WORD ATT) (WORD bearers))) (AND (CONDITION (WORD from) (CONDITION (WORD the) (CONDITION (WORD same) (WORD device)))) (CONDITION (WORD are) (CONDITION (WORD supported) (CONDITION (WORD by) (CONDITION (WORD the) (CONDITION (WORD GATT) (WORD server)))))))))(SEPARATEDSTATEMENT (PUNCT ,) (STATEMENT (VARIABLE (WORD each) (VARIABLE (WORD ATT) (WORD bearer))) (CONDITION (WORD shall) (CONDITION (WORD be) (CONDITION (WORD considered) (CONDITION (WORD to) (CONDITION (WORD have) (CONDITION (WORD a) (CONDITION (WORD separate) (CONDITION (WORD GATT) (CONDITION (WORD client) (WORD instance)))))))))))))(PUNCT .))